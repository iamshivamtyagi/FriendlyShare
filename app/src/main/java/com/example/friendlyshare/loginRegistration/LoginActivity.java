package com.example.friendlyshare.loginRegistration;

import android.content.Intent;
import android.os.Bundle;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import android.widget.Toast;

import androidx.annotation.NonNull;
import androidx.appcompat.app.AppCompatActivity;

import com.example.friendlyshare.MainActivity;
import com.example.friendlyshare.R;
import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseUser;

public class LoginActivity extends AppCompatActivity {

    private Button mLogin;

    private EditText mEmail, mPassword;

    private TextView mSignUpFromLogin;

    private FirebaseAuth mAuth;
    // it indicate whether user log in or out, with the help of this,we can move to next Activity or not
    private FirebaseAuth.AuthStateListener firebaseAuthStateListener;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_login);

        mSignUpFromLogin = findViewById(R.id.sign_up_text);
        mLogin = findViewById(R.id.login);
        mEmail = findViewById(R.id.email);
        mPassword = findViewById(R.id.password);
        mAuth = FirebaseAuth.getInstance();

        mSignUpFromLogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                Intent intent = new Intent(getApplication(), RegistrationActivity.class);
                startActivity(intent);
                finish();
                return;
            }
        });

        // it will trigger every time when user logs in
        // (it also trigger when user logs out but log out is not going to take place in this activity)
        firebaseAuthStateListener = new FirebaseAuth.AuthStateListener() {
            @Override
            public void onAuthStateChanged(@NonNull FirebaseAuth firebaseAuth) {
                // to get the user id (unique token for every unique user generated by firebase to access user data)
                FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
                // if user not null, then we simply launch MainActivity
                if (user != null) {
                    Intent intent = new Intent(getApplication(), MainActivity.class);
                    intent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP);
                    startActivity(intent);
                    finish();
                    return;
                }
            }
        };

        // trigger when user press login button
        mLogin.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                //to get email id from editText mEmail
                final String email = mEmail.getText().toString();
                //to get password from editText mPassword
                final String password = mPassword.getText().toString();

                // to validate the login credentials i.e., input id & password registered already on firebase or not
                mAuth.signInWithEmailAndPassword(email, password).addOnCompleteListener(LoginActivity.this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        // if login successful then automatically firebaseAuthStateListener called
                        // if validation failed, show toast
                        if (!task.isSuccessful()) {
                            Toast.makeText(LoginActivity.this, "Sign in ERROR", Toast.LENGTH_SHORT).show();
                        }
                    }
                });
            }
        });

    }

    // it starts when this activity started
    @Override
    protected void onStart() {
        super.onStart();
        // to start or add authStateListener
        mAuth.addAuthStateListener(firebaseAuthStateListener);
    }

    @Override
    protected void onStop() {
        super.onStop();
        // to remove AuthStateListener
        mAuth.removeAuthStateListener(firebaseAuthStateListener);
    }
}
